{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"w",
				"w_output\tstatement"
			],
			[
				"ex",
				"expected\tparam"
			],
			[
				"for",
				"forward\tfunction"
			],
			[
				"tra",
				"train_y\tstatement"
			],
			[
				"num",
				"num_neurons\tparam"
			],
			[
				"input",
				"input_dim\tparam"
			],
			[
				"neu",
				"num_neurons"
			],
			[
				"fo",
				"forward\tfunction"
			],
			[
				"so",
				"source_url\tparam"
			],
			[
				"pt1",
				"pt1_a"
			],
			[
				"ca",
				"candidate"
			],
			[
				"json",
				"json_str"
			],
			[
				"parse",
				"parse_speaking_sample"
			],
			[
				"spea",
				"speaking_task_sample"
			],
			[
				"par",
				"part2"
			],
			[
				"pt2",
				"pt2_examiner_instructions"
			],
			[
				"card",
				"card_end"
			],
			[
				"car",
				"card_start"
			],
			[
				"prin",
				"print"
			],
			[
				"print",
				"pt2_examiner_instructions"
			],
			[
				"p1",
				"pt1_questions"
			],
			[
				"pa",
				"part3"
			],
			[
				"p",
				"part3"
			],
			[
				"part",
				"part1"
			],
			[
				"Mono",
				"MonologuePart\tclass"
			],
			[
				"dump",
				"dumps\tfunction"
			],
			[
				"sample",
				"sample_json\tstatement"
			],
			[
				"fr",
				"format\tfunction"
			],
			[
				"from",
				"fromstring\tfunction"
			],
			[
				"du",
				"dumps\tfunction"
			],
			[
				"marg",
				"margin-top\tproperty"
			],
			[
				"a",
				"avoid\tpage-break-inside"
			],
			[
				"mar",
				"margin-left\tproperty"
			],
			[
				"mat",
				"margin-top\tproperty"
			],
			[
				"fonts",
				"font-size\tproperty"
			],
			[
				"pad",
				"padding-top\tproperty"
			],
			[
				"rg",
				"rgba()\tcolor"
			],
			[
				"font",
				"font-family\tproperty"
			],
			[
				"geore",
				"georgefedoseev"
			],
			[
				"inli",
				"inline-block\tdisplay"
			],
			[
				"di",
				"div\tTag"
			],
			[
				"fon",
				"font-family\tproperty"
			],
			[
				"ti",
				"title\tTag"
			],
			[
				"c",
				"cityName"
			],
			[
				"su",
				"sums_mask\tstatement"
			],
			[
				"sums",
				"sums_mask\tstatement"
			],
			[
				"max",
				"SQRT_MAX_pqr"
			],
			[
				"poss",
				"possible_ac\tstatement"
			],
			[
				"pairs",
				"perfect_sq_pairs\tstatement"
			],
			[
				"Max",
				"MAX_pqr\tstatement"
			],
			[
				"sq",
				"sqrt_val\tstatement"
			],
			[
				"pre",
				"predict_kplus1"
			],
			[
				"pred",
				"predict_k_plus1\tstatement"
			],
			[
				"sum",
				"bad_pred_sum"
			],
			[
				"is",
				"is_palindrome\tfunction"
			],
			[
				"str",
				"str_n\tstatement"
			],
			[
				"Tu",
				"True\tkeyword"
			],
			[
				"plot",
				"plot_train\tfunction"
			],
			[
				"epis",
				"episode_scores\tstatement"
			],
			[
				"nex",
				"next_state\tstatement"
			],
			[
				"rew",
				"reward\tparam"
			],
			[
				"states",
				"state_size\tparam"
			],
			[
				"qne",
				"qnetwork_target\tstatement"
			],
			[
				"q",
				"qnetwork_local\tstatement"
			],
			[
				"Qta",
				"Q_targets_next\tstatement"
			],
			[
				"next",
				"next_states\tstatement"
			],
			[
				"do",
				"dones"
			],
			[
				"rewa",
				"rewards"
			],
			[
				"actio",
				"action_size\tstatement"
			],
			[
				"act",
				"action_values\tstatement"
			],
			[
				"ra",
				"random\tstatement"
			],
			[
				"Repa",
				"ReplayMemory\tclass"
			],
			[
				"para",
				"parameters"
			],
			[
				"state",
				"state_size\tparam"
			],
			[
				"stat",
				"state_size"
			],
			[
				"fc",
				"fc3\tstatement"
			],
			[
				"fc2",
				"fc2_units\tparam"
			],
			[
				"fc1",
				"fc1_units\tparam"
			],
			[
				"se",
				"self\tparam"
			],
			[
				"rand",
				"rand_action\tstatement"
			],
			[
				"Ada",
				"Adam\tclass"
			],
			[
				"ze",
				"zeros"
			],
			[
				"targe",
				"target_net\tstatement"
			],
			[
				"optim",
				"optimize_model\tfunction"
			],
			[
				"res",
				"reset"
			],
			[
				"zer",
				"zero_grad\tfunction"
			],
			[
				"opt",
				"optimizer\tstatement"
			],
			[
				"expe",
				"expected_state_action_values\tstatement"
			],
			[
				"statea",
				"predicted_state_action_values"
			],
			[
				"rear",
				"reward_batch\tstatement"
			],
			[
				"next_s",
				"next_state_values\tstatement"
			],
			[
				"mask",
				"non_final_mask"
			],
			[
				"ac",
				"action_batch\tstatement"
			],
			[
				"EPS",
				"EPS_START\tstatement"
			],
			[
				"memo",
				"memory"
			],
			[
				"io",
				"ion\tfunction"
			],
			[
				"co",
				"count\tclass"
			],
			[
				"Conv",
				"Conv2d\tclass"
			],
			[
				"he",
				"hello_embed\tstatement"
			],
			[
				"Loo",
				"lookup_tensor\tstatement"
			],
			[
				"wor",
				"word_to_ix\tstatement"
			],
			[
				"bes",
				"best_accuracy\tparam"
			],
			[
				"best",
				"best_accuracy\tstatement"
			],
			[
				"load",
				"load_state_dict"
			],
			[
				"saved",
				"saved_model_latest_path\tstatement"
			],
			[
				"tor",
				"torch\tmodule"
			],
			[
				"loa",
				"load_state_dict"
			],
			[
				"expor",
				"export_train_dir\tstatement"
			],
			[
				"cop",
				"copy2\tfunction"
			],
			[
				"expo",
				"export_train_dir\tstatement"
			],
			[
				"va",
				"val_filepaths\tstatement"
			],
			[
				"clas",
				"class_image_filepaths\tstatement"
			],
			[
				"split",
				"split_train\tstatement"
			],
			[
				"class",
				"class_image_filenames\tstatement"
			],
			[
				"cla",
				"class_image_filenames\tstatement"
			],
			[
				"cl",
				"class_src_dir\tstatement"
			],
			[
				"maked",
				"makedirs\tfunction"
			],
			[
				"dir",
				"dir_path\tstatement"
			],
			[
				"s",
				"show"
			],
			[
				"plt",
				"plt_show\tparam"
			],
			[
				"nu",
				"num_epochs\tparam"
			],
			[
				"train",
				"train_model\tfunction"
			],
			[
				"ste",
				"step_size\tparam"
			],
			[
				"lr",
				"lr_scheduler\tmodule"
			],
			[
				"mode",
				"model_ft\tstatement"
			],
			[
				"model",
				"model_ft\tstatement"
			],
			[
				"images",
				"images_so_far\tstatement"
			],
			[
				"mo",
				"model\tparam"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack ins",
				"Package Control: Install Package"
			],
			[
				"package",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/gosha/Projects/nn_with_numpy"
	],
	"file_history":
	[
		"/Users/gosha/Desktop/xor_nn.py",
		"/Users/gosha/Projects/LandRover-Email-Collect-Send-PC/Assets/Scripts/SendPageScript.cs",
		"/Users/gosha/Desktop/cron.php",
		"/Users/gosha/Projects/LandRover-Email-Collect-Send-PC/Assets/Scripts/AppScript.cs",
		"/Users/gosha/Projects/Hashtag-Media-Crawler-PC/Assets/Scripts/AppScript.cs",
		"/Users/gosha/Desktop/Hours_Per_Week_Backup.txt",
		"/Users/gosha/Projects/eurler/3_largest_prime_factor.py",
		"/Users/gosha/Downloads/TweetBeamJSONNode_v6 - 2Feb18/TweetBeamJSONNode.cs",
		"/Users/gosha/Desktop/create_db.sql",
		"/Users/gosha/Projects/IELTS-Speaking-Topics-App/Assets/StreamingAssets/categories.txt",
		"/Users/gosha/Projects/ielts-speaking-parsing/ielts-up.com/samples.json",
		"/Users/gosha/Desktop/ios_builds/IELTS-Speaking-Topics/Info.plist",
		"/Users/gosha/Projects/ielts-speaking-parsing/venv/lib/python3.6/site-packages/jsonpickle/backend.py",
		"/Users/gosha/Projects/ielts-speaking-parsing/venv/lib/python3.6/site-packages/jsonpickle/pickler.py",
		"/Users/gosha/Projects/ielts-speaking-parsing/model.py",
		"/Users/gosha/Projects/ielts-speaking-parsing/ielts-speaking-parsing.sublime-project",
		"/Users/gosha/Projects/ielts-speaking-parsing/ielts-up.com/parse_links.py",
		"/Users/gosha/Projects/ielts-speaking-parsing/ielts-up.com/links.json",
		"/Users/gosha/Projects/ielts-speaking-parsing/links.json",
		"/Users/gosha/Desktop/win-builds/LandRover-Email-Collect-Send-PC/LandRover-Email-Collect-Send-PC-v2_Data/StreamingAssets/config.json",
		"/Users/gosha/Projects/LandRover-Email-Collect-Send-PC/Assets/StreamingAssets/config.json",
		"/Users/gosha/.config/LandRover-Email-Collect-Send-PC/users.json",
		"/Users/gosha/Desktop/FinishPageScript.cs",
		"/Users/gosha/Downloads/FinishPageScript.cs",
		"/Users/gosha/Downloads/InstagramCrawler-master/instagramcrawler.py",
		"/Users/gosha/Downloads/InstagramCrawler-master/auth.json",
		"/Users/gosha/Downloads/InstagramCrawler-master/auth.json.example",
		"/Users/gosha/Projects/JJ-Ethicon-App-PC/Assets/Scripts/PageSystem/Helpers/PanelFullScreenScript.cs",
		"/Users/gosha/Desktop/JJ_Ethicon_App/help.txt",
		"/Users/gosha/Projects/JJ-Ethicon-App-PC/Assets/StreamingAssets/qawall_answers.json",
		"/Users/gosha/Desktop/goodnia/jj-ethicon-app-approval-ipad/manifest.plist",
		"/Users/gosha/Desktop/goodnia/jj-ethicon-app-approval-ipad/index.html",
		"/Users/gosha/Projects/hair_brush_ios/HairBrush/Source/ModelExecutor.swift",
		"/Users/gosha/Desktop/JJ_Ethicon_App/help.tdxt",
		"/Users/gosha/Projects/JJ-Ethicon-App-PC/Assets/Scripts/NetworkCommunicationScript.cs",
		"/Users/gosha/Projects/JJ-Ethicon-App-PC/Assets/StreamingAssets/qawall_questions.json",
		"/Users/gosha/Projects/JJ-Ethicon-App-PC/Assets/StreamingAssets/users.json",
		"/Users/gosha/Projects/JJ-Ethicon-App-PC/Logs/Packages-Update.log",
		"/Users/gosha/Downloads/Ad0bPSCC201815Mul/Readme.txt",
		"/Users/gosha/Projects/JJ-Ethicon-App-PC/Packages/manifest.json",
		"/Users/gosha/Desktop/Job Applications/cover-letter.txt",
		"/Users/gosha/Desktop/test.py",
		"/Users/gosha/Projects/cv-html/cover-letter.html",
		"/Users/gosha/Desktop/Job Applications/cover-letter-microsoft.md",
		"/Users/gosha/Projects/cv-html/index.html",
		"/Users/gosha/Projects/hair_brush_ios/.gitignore",
		"/Users/gosha/Desktop/Job Applications/cv-v2/achievements_at_work.txt",
		"/Users/gosha/Desktop/ielts_task2.txt",
		"/Users/gosha/Desktop/ielts_task1.txt",
		"/Users/gosha/Downloads/ielts_writing2.rtf",
		"/Users/gosha/Projects/pm_map/Assets/Scripts/Facilities/RoomScript.cs",
		"/Users/gosha/Projects/pm_map/Assets/Editor/TestEditorScript.cs",
		"/Users/gosha/Projects/pm_map/Assets/update.sh",
		"/Users/gosha/Projects/pm_map/README.md",
		"/Users/gosha/Desktop/DropboxSync-unityforum.txt",
		"/Users/gosha/Projects/eurler/euler.sublime-project",
		"/Users/gosha/Projects/eurler/5_smallest_multiple.py",
		"/Users/gosha/Projects/eurler/6_sum_square_diff.py",
		"/Users/gosha/Projects/eurler/101_optimum_polinomial.py",
		"/Users/gosha/Projects/eurler/1_3and5.py",
		"/Users/gosha/Projects/eurler/2_fibonacci.py",
		"/Users/gosha/Projects/eurler/4_largest_palindrome_product.py",
		"/Users/gosha/Library/Application Support/Sublime Text 3/Packages/Jedi - Python autocompletion/Default.sublime-keymap",
		"/Users/gosha/Library/Application Support/Sublime Text 3/Packages/Jedi - Python autocompletion/sublime_jedi.sublime-settings",
		"/Users/gosha/Projects/pytorch-practice/gym/1_intro.py",
		"/Users/gosha/Projects/pytorch-practice/python_practice.py",
		"/Users/gosha/Projects/pytorch-practice/pytorch-practice.sublime-project",
		"/Users/gosha/Projects/pytorch-practice/learn/7_nlp.py",
		"/Users/gosha/Projects/pytorch-practice/learn/4_image_classifier.py",
		"/Users/gosha/Projects/pytorch-practice/dataset_divide.py",
		"/Users/gosha/Projects/pytorch-practice/learn/MGO_transfer_learning.py",
		"/Users/gosha/Projects/pytorch-practice/learn/MG_transfer_learning.py",
		"/Users/gosha/Projects/pytorch-practice/learn/dataset_divide.py",
		"/Users/gosha/Projects/pytorch-practice/learn/5_gpu_parallel.py",
		"/Users/gosha/Projects/pytorch-practice/learn/gpu_memory.py",
		"/Users/gosha/Library/Application Support/Sublime Text 3/Packages/User/Default.sublime-keymap",
		"/Users/gosha/Projects/pytorch-practice/learn/6_transfer_learning.py",
		"/Users/gosha/miniconda3/envs/pytorch-gpu/lib/python3.6/site-packages/torch/cuda/__init__.py",
		"/Users/gosha/Projects/pytorch-practice/learn/3_training_steps.py",
		"/Users/gosha/Projects/pytorch-practice/learn/autograd.py",
		"/Users/gosha/Projects/pytorch-practice/learn.py",
		"/Users/gosha/Projects/pytorch-practice/learn",
		"/Users/gosha/Desktop/cover-letter-DEEPMIND.txt",
		"/Users/gosha/Desktop/cover-letter-NEURALINK.txt",
		"/Users/gosha/Desktop/cover-letter-UNITY-small-things.txt",
		"/Users/gosha/Desktop/cover-letter-UNITY.txt",
		"/Users/gosha/Desktop/cover-letter-TESLA.txt",
		"/Users/gosha/Desktop/DeepSpeech_host_env_install.txt",
		"/Users/gosha/Desktop/DeepSpeech_host_ienv_install.txt"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 285.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "nn_numpy.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 284.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
